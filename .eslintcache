[{"/home/alex/Desktop/projects/advanced/reactomon/src/components/pages/DetailedView.js":"1","/home/alex/Desktop/projects/advanced/reactomon/src/components/pages/TypeList.js":"2","/home/alex/Desktop/projects/advanced/reactomon/src/components/pages/PokemonList.js":"3","/home/alex/Desktop/projects/advanced/reactomon/src/App.js":"4","/home/alex/Desktop/projects/advanced/reactomon/src/components/layout/Navbar.js":"5","/home/alex/Desktop/projects/advanced/reactomon/src/components/layout/Switches.js":"6","/home/alex/Desktop/projects/advanced/reactomon/src/index.js":"7","/home/alex/Desktop/projects/advanced/reactomon/src/reportWebVitals.js":"8","/home/alex/Desktop/projects/advanced/reactomon/src/ThemeContext.js":"9"},{"size":2766,"mtime":1606731775011,"results":"10","hashOfConfig":"11"},{"size":1304,"mtime":1606732685611,"results":"12","hashOfConfig":"11"},{"size":2738,"mtime":1606736407727,"results":"13","hashOfConfig":"11"},{"size":895,"mtime":1606730433100,"results":"14","hashOfConfig":"11"},{"size":955,"mtime":1606731919321,"results":"15","hashOfConfig":"11"},{"size":490,"mtime":1606735417219,"results":"16","hashOfConfig":"11"},{"size":547,"mtime":1606301490488,"results":"17","hashOfConfig":"11"},{"size":362,"mtime":1606301341931,"results":"18","hashOfConfig":"11"},{"size":409,"mtime":1606731247731,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"10etube",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alex/Desktop/projects/advanced/reactomon/src/components/pages/DetailedView.js",["42","43","44","45","46"],"import React, {useContext, useEffect, useState} from 'react';\nimport axios from 'axios';\nimport PokemonList from \"./PokemonList\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport styled from 'styled-components'\nimport {Col, Container, Row, ListGroup, ListGroupItem} from \"reactstrap\";\nimport {ThemeContext} from \"../../ThemeContext\";\n\n\n\n//using styled component\nconst Name = styled.h1`\n  text-align: center;\n  color: #796666;\n  border: solid;\n  border-radius: 10px;\n  box-shadow: 5px 10px #a19c9c;\n`\n\n\n\nfunction DetailedView(props){\n    const [background, setBackground] = useContext(ThemeContext);\n    const Background = styled.div`\n    background-color: ${background};\n`\n\n    const [experience, setExperience]  = useState('')\n    const [height, setHeight] = useState('')\n    const [weight, setWeight] = useState('')\n    const [abilities, setAbilities] = useState([])\n    const [species, setSpecies] = useState({})\n\n    // id is taken from -> <Route path={'/details/:id'} component={DetailedView}/>\n    let pokemonId = props.match.params.id\n\n    useEffect(() => {\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\n            .then(res => {\n                setExperience(res.data.base_experience)\n                setHeight(res.data.height)\n                setWeight(res.data.weight)\n                setAbilities(res.data.abilities)\n                setSpecies(res.data.species)\n            })\n    }, [pokemonId])\n\n    return (\n        <Background>\n            <Container>\n                <Row>\n                    <Col xs=\"6\">\n                        <img src={`/images/${pokemonId}.png`} alt=\"\"/>\n                        <Name>{species.name}</Name>\n\n                    </Col>\n                    <div style={listGroup}>\n                        <Col xs=\"6\">\n\n                                <ListGroup >\n                                    <ListGroupItem color=\"info\">Experience : {experience}</ListGroupItem>\n                                    <ListGroupItem color=\"info\">Height : {height}</ListGroupItem>\n                                    <ListGroupItem color=\"info\">Weight : {weight}</ListGroupItem>\n                                    {abilities.map((allAbilities, index) => {\n                                        return <ListGroupItem color=\"info\">Ability {index+1} : {allAbilities.ability.name}</ListGroupItem>\n                                    })}\n                                </ListGroup>\n                        </Col>\n                    </div>\n                </Row>\n            </Container>\n\n        </Background>\n    )\n}\n\nconst listGroup = {\n    margin: 'auto',\n    width: '50%',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    padding: '10px'\n}\nexport default DetailedView;","/home/alex/Desktop/projects/advanced/reactomon/src/components/pages/TypeList.js",["47","48"],"import React, {useContext, useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport {Container, Row, Col, ListGroupItem, ListGroup} from 'reactstrap';\nimport {ThemeContext} from \"../../ThemeContext\";\nimport styled from 'styled-components';\n\n\n\nfunction TypeList(){\n\n    const [background, setBackground] = useContext(ThemeContext);\n    const [types, setTypes] = useState([])\n\n    const Background = styled.div`\n    background-color: ${background};\n`\n\n    useEffect(() => {\n        axios.get('https://pokeapi.co/api/v2/type')\n            .then(response => setTypes(response.data.results))\n    }, [types])\n\n    return(\n        <Background>\n            <Container>\n                <Row style={typeStyle}>\n                    {types.map(type => {\n                        return <Col xs='3' style={{marginTop: \"20px\"}}>\n                                    <ListGroup>\n                                        <ListGroupItem color=\"info\">{type.name}</ListGroupItem>\n                                    </ListGroup>\n                                </Col>\n                            })}\n                </Row>\n            </Container>\n        </Background>\n\n    )\n}\n\nconst typeStyle = {\n    textAlign: 'center',\n    fontWeight: 'bold'\n}\n\nexport default TypeList;","/home/alex/Desktop/projects/advanced/reactomon/src/components/pages/PokemonList.js",["49"],"/home/alex/Desktop/projects/advanced/reactomon/src/App.js",["50","51","52"],"/home/alex/Desktop/projects/advanced/reactomon/src/components/layout/Navbar.js",["53","54"],"import {Link} from \"react-router-dom\";\nimport React, {useContext} from 'react';\nimport 'react-clock/dist/Clock.css';\nimport {ThemeContext} from '../../ThemeContext.js';\nimport Switches from './Switches.js'\nimport styled from \"styled-components\";\n\n\nfunction Navbar(){\n\n    const [background, setBackground] = useContext(ThemeContext);\n\n    const Background = styled.div`\n    background-color: ${background};\n`\n\n    return(\n        <Background>\n            <header style={headerStyle}>\n                <div>\n                    <Link to={'/'}><img src={\"/images/pokemon.png\"} alt=\"\"/></Link>\n                </div>\n                <div>\n                    <Link to=\"/pokemons\">Pokemons</Link> | <Link to=\"/types\">Types</Link> | <Switches/>\n                </div>\n            </header>\n        </Background>\n\n    )\n}\n\n\nconst headerStyle = {\n    textAlign: \"center\",\n    padding: \"10px\"\n}\n\n\nconst titleStyle = {\n    color: \"#00008b\"\n}\n\nexport default Navbar;","/home/alex/Desktop/projects/advanced/reactomon/src/components/layout/Switches.js",["55","56","57","58"],"/home/alex/Desktop/projects/advanced/reactomon/src/index.js",[],["59","60"],"/home/alex/Desktop/projects/advanced/reactomon/src/reportWebVitals.js",[],"/home/alex/Desktop/projects/advanced/reactomon/src/ThemeContext.js",[],{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":19},{"ruleId":"61","severity":1,"message":"65","line":4,"column":9,"nodeType":"63","messageId":"64","endLine":4,"endColumn":15},{"ruleId":"61","severity":1,"message":"66","line":4,"column":17,"nodeType":"63","messageId":"64","endLine":4,"endColumn":21},{"ruleId":"61","severity":1,"message":"67","line":5,"column":9,"nodeType":"63","messageId":"64","endLine":5,"endColumn":13},{"ruleId":"61","severity":1,"message":"68","line":24,"column":24,"nodeType":"63","messageId":"64","endLine":24,"endColumn":37},{"ruleId":"61","severity":1,"message":"67","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":13},{"ruleId":"61","severity":1,"message":"68","line":12,"column":24,"nodeType":"63","messageId":"64","endLine":12,"endColumn":37},{"ruleId":"61","severity":1,"message":"68","line":13,"column":24,"nodeType":"63","messageId":"64","endLine":13,"endColumn":37},{"ruleId":"61","severity":1,"message":"69","line":1,"column":16,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"70","line":8,"column":9,"nodeType":"63","messageId":"64","endLine":8,"endColumn":21},{"ruleId":"61","severity":1,"message":"71","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":14},{"ruleId":"61","severity":1,"message":"68","line":11,"column":24,"nodeType":"63","messageId":"64","endLine":11,"endColumn":37},{"ruleId":"61","severity":1,"message":"72","line":39,"column":7,"nodeType":"63","messageId":"64","endLine":39,"endColumn":17},{"ruleId":"61","severity":1,"message":"73","line":1,"column":28,"nodeType":"63","messageId":"64","endLine":1,"endColumn":37},{"ruleId":"61","severity":1,"message":"71","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},{"ruleId":"61","severity":1,"message":"74","line":7,"column":12,"nodeType":"63","messageId":"64","endLine":7,"endColumn":22},{"ruleId":"61","severity":1,"message":"68","line":7,"column":24,"nodeType":"63","messageId":"64","endLine":7,"endColumn":37},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},"no-unused-vars","'PokemonList' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","'setBackground' is assigned a value but never used.","'useContext' is defined but never used.","'ThemeContext' is defined but never used.","'styled' is defined but never used.","'titleStyle' is assigned a value but never used.","'useEffect' is defined but never used.","'background' is assigned a value but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-global-assign","no-unsafe-negation"]